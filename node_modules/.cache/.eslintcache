[{"E:\\html\\React_JS\\project\\src\\index.js":"1","E:\\html\\React_JS\\project\\src\\App.js":"2","E:\\html\\React_JS\\project\\src\\studentData.js":"3","E:\\html\\React_JS\\project\\src\\StudentForm1.js":"4","E:\\html\\React_JS\\project\\src\\StudentFormEdit.js":"5","E:\\html\\React_JS\\project\\src\\Registration.js":"6","E:\\html\\React_JS\\project\\src\\LoginForm.js":"7"},{"size":132,"mtime":1698179153395,"results":"8","hashOfConfig":"9"},{"size":795,"mtime":1700682745395,"results":"10","hashOfConfig":"9"},{"size":6485,"mtime":1703188876396,"results":"11","hashOfConfig":"9"},{"size":4279,"mtime":1700637749604,"results":"12","hashOfConfig":"9"},{"size":5196,"mtime":1703189506867,"results":"13","hashOfConfig":"9"},{"size":4309,"mtime":1702924203259,"results":"14","hashOfConfig":"9"},{"size":3120,"mtime":1700923329938,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"1gpcgls",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\html\\React_JS\\project\\src\\index.js",[],[],["41"],"E:\\html\\React_JS\\project\\src\\App.js",["42"],[],"E:\\html\\React_JS\\project\\src\\studentData.js",["43"],[],"import { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./App.css\"\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth, signOut } from \"firebase/auth\"\r\n\r\nfunction StudentData() {\r\n    const [data, setData] = useState([])\r\n    const [value, setValue] = useState(\"\")\r\n    const [sort, setSort] = useState(\"\")\r\n    const navigate = useNavigate()\r\n    let options = ['id', 'Name', 'City', 'RollNO', 'EmailId', 'Mobile', 'Course', 'DOJ']\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://student-db-2u3s.onrender.com/StudentDatabase\")\r\n            .then((res) => {\r\n                return res.json();\r\n            })\r\n            .then((resp) => {\r\n                console.log(resp)\r\n                setData(resp)\r\n            })\r\n\r\n    }, [])\r\n\r\n    const ChangeUser = (e) => {\r\n        setValue(e.target.value)\r\n    }\r\n\r\n    const handleSearch = async (e) => {\r\n        e.preventDefault()\r\n        return await axios.get(`https://student-db-2u3s.onrender.com/StudentDatabase?q=${value}`)\r\n            .then((res) => {\r\n                setData(res.data)\r\n            })\r\n    }\r\n\r\n    const Sortdata = async (e) => {\r\n        e.preventDefault()\r\n        let value = e.target.value\r\n        setSort(value)\r\n        return await axios.get(`https://student-db-2u3s.onrender.com/StudentDatabase?_sort=${value}&_order=asc`)\r\n            .then((res) => {\r\n                setData(res.data)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const ChangeEdit = (id) => {\r\n        navigate(\"/studentedit/\" + id)\r\n    }\r\n\r\n    const ChangeDelete = (id) => {\r\n        fetch(\"https://student-db-2u3s.onrender.com/StudentDatabase/\" + id, {\r\n            method: \"DELETE\"\r\n        })\r\n            .then(() => {\r\n                alert(\"Deleted Successfully\")\r\n                window.location.reload()\r\n            })\r\n            .catch((err) => {\r\n                alert(\"error\" + err)\r\n            })\r\n    }\r\n    const firebaseConfig = {\r\n        apiKey: \"AIzaSyB3PMxwFjmyYaxWzF7WDXllOwdUroZMNdg\",\r\n        authDomain: \"student-registration-ee0dc.firebaseapp.com\",\r\n        projectId: \"student-registration-ee0dc\",\r\n        storageBucket: \"student-registration-ee0dc.appspot.com\",\r\n        messagingSenderId: \"397539225199\",\r\n        appId: \"1:397539225199:web:caf0e49dcc38535acba79a\",\r\n        measurementId: \"G-FF3854F9LH\"\r\n      };\r\n\r\n    const app = initializeApp(firebaseConfig);\r\n    const reg = getAuth()\r\n    const submitdata = (e) => {\r\n        e.preventDefault()\r\n\r\n        signOut(reg)\r\n            .then(() => {\r\n                alert(\" Logged Out successfully\")\r\n                navigate(\"/login\")\r\n            })\r\n            .catch(() => {\r\n                alert(\"error\")\r\n            })\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"cards\">\r\n\r\n                <div className=\"card-title row g-3\">\r\n                    <h1 className=\"text-center\"><b><u>Student Database Management System</u></b></h1>\r\n                </div>\r\n                <div className=\"card-body\" style={{ maxwidth: \"500px\" }}>\r\n                    <div className=\" nav d-flex justify-content-between m-5\">\r\n                        <Link to=\"/StudentForm1\" className=\"btn btn-success border border-sucess mx-3\">ADD new(+)</Link><br /><br />\r\n                        <select style={{ width: \"180px\", height: \"40px\" }} value={sort} onChange={Sortdata}>\r\n                            <option>Sort</option>\r\n                            {options.map((item) => (\r\n                                <option>{item}</option>\r\n\r\n\r\n                            ))}\r\n                        </select>\r\n                        <form onSubmit={handleSearch} className=\"mx-2\" >\r\n                            <input style={{ width: \"240px\", height: \"38px\" }} type=\"text\" value={value} placeholder=\"Filter Records\" onChange={ChangeUser} />\r\n                            <button style={{ width: \"100px\", height: \"38px\" }} type=\"submit\">Search</button>\r\n                            <button className=\"btn btn-info border border-black mx-2\" onClick={submitdata}>Logout</button>\r\n                        </form><br /><br />\r\n\r\n                    </div>\r\n                    <div className=\"table-responsive mx-2\">\r\n                        <table className=\"table table-bordered table-striped\">\r\n                            <thead className=\"bg-dark text-white\">\r\n                                <tr>\r\n                                    <th>Id</th>\r\n                                    <th>Name</th>\r\n                                    <th>City</th>\r\n                                    <th>EmailId</th>\r\n                                    <th>Roll No</th>\r\n                                    <th>Mobile</th>\r\n                                    <th>Course</th>\r\n                                    <th>DOJ</th>\r\n                                    <th>Actions</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {data.map((item) => (\r\n                                    <tr key={item.id}>\r\n                                        <td>{item.id}</td>\r\n                                        <td>{item.Name}</td>\r\n                                        <td>{item.City}</td>\r\n                                        <td>{item.EmailId}</td>\r\n                                        <td>{item.RollNO}</td>\r\n                                        <td>{item.Mobile}</td>\r\n                                        <td>{item.Course}</td>\r\n                                        <td>{item.DOJ}</td>\r\n                                        <td>\r\n                                            <button onClick={() => { ChangeEdit(item.id) }} className=\"btn btn-success\">Edit</button>\r\n                                            <button onClick={() => { ChangeDelete(item.id) }} className=\"btn btn-danger m-2\">Delete</button>\r\n                                            {/* <button className=\"btn btn-success\">Add </button> */}\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default StudentData;",["44"],"E:\\html\\React_JS\\project\\src\\StudentForm1.js",[],[],"E:\\html\\React_JS\\project\\src\\StudentFormEdit.js",["45"],[],"import { useEffect, useState } from \"react\";\r\n// import \"./App.css\"\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\n\r\nfunction StudentEditForm(){\r\n  const [id, setId] = useState(\"\")\r\n  const [Name, setName] = useState(\"\")\r\n  const [City, setCity] = useState(\"\")\r\n  const [EmailId, setEmailId] = useState(\"\")\r\n  const [RollNO, setRollNo] = useState(\"\")\r\n  const [Mobile, setMobile] = useState(\"\")\r\n  const [Course, setCourse] = useState(\"\")\r\n  const [DOJ, setDOJ] = useState(\"\")\r\n\r\n  const {stid} = useParams()\r\n\r\n  const navigate = useNavigate()\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://student-db-2u3s.onrender.com/StudentDatabase/\" + stid)\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((resp) => {\r\n        console.log(resp)\r\n        setId(resp.id)\r\n        setName(resp.Name)\r\n        setCity(resp.City)\r\n        setEmailId(resp.EmailId)\r\n        setRollNo(resp.RollNO)\r\n        setMobile(resp.Mobile)\r\n        setCourse(resp.Course)\r\n        setDOJ(resp.DOJ)\r\n      })\r\n\r\n  },[])\r\n\r\n  const changeId = (e) => {\r\n    setId(e.target.value)\r\n  }\r\n\r\n  const changeName = (e) => {\r\n    setName(e.target.value)\r\n  }\r\n\r\n  const changeEmail = (e) => {\r\n    setEmailId(e.target.value)\r\n  }\r\n\r\n  const changeCity = (e) => {\r\n    setCity(e.target.value)\r\n  }\r\n\r\n  const changeRollNo = (e) => {\r\n    setRollNo(e.target.value)\r\n  }\r\n\r\n  const changeMobile = (e) => {\r\n    setMobile(e.target.value)\r\n  }\r\n\r\n  const changeCourse = (e) => {\r\n    setCourse(e.target.value)\r\n  }\r\n\r\n  const changeDOJ = (e) => {\r\n    setDOJ(e.target.value)\r\n  }\r\n\r\n  const formSubmit = (e) => {\r\n    e.preventDefault()\r\n    let data = { id, Name, City, RollNO, EmailId, Mobile, Course, DOJ }\r\n    fetch(\"https://student-db-2u3s.onrender.com/StudentDatabase/\" + stid, {\r\n      method: \"PUT\",\r\n      headers: { \"Content-type\": \"application/json\" },\r\n      body: JSON.stringify(data)\r\n    })\r\n      .then((resp) => {\r\n        alert(\"saved successfully..!\")\r\n        console.log(resp)\r\n        navigate(\"/a\")\r\n        setId(\"\")\r\n        setName(\"\")\r\n        setEmailId(\"\")\r\n        setCity(\"\")\r\n        setMobile(\"\")\r\n        setRollNo(\"\")\r\n        setDOJ(\"\")\r\n        setCourse(\"\")\r\n      })\r\n      .catch((err) => {\r\n        alert(\"Error\" + err)\r\n      })\r\n  }\r\n  return (\r\n    <div style={{backgroundImage:`url(\"https://www.gosforthacademy.org.uk/_filecache/b9d/c2f/7252-cropped-w475-h390-of-1-FFFFFF-gosforth-academy-website-banner-4.jpg\")`,backgroundSize:\"cover\",backgroundRepeat:\"no-repeat\",padding:\"20px\",maxHeight:\"150vh\"}}>\r\n    <div className=\"container\" style={{maxWidth:\"500px\"}}>\r\n      <div className=\"card border border-3 \" style={{backgroundColor:\"rgba(217, 195, 241, 0.829)\"}}>\r\n        <div className=\"card-title\">\r\n          <h1 className=\"text-center\"><b><u>Student-Edit Form</u></b></h1>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <form onSubmit={formSubmit}>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">ID</label>\r\n              <input type=\"number\" className=\"form-control\" value={id} placeholder=\"Enter ID\" onChange={changeId} disabled />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Name</label>\r\n              <input type=\"text\" className=\"form-control\" value={Name} placeholder=\"Enter Name\" onChange={changeName} required />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">City</label>\r\n              <input type=\"text\" className=\"form-control\" value={City} placeholder=\"Enter City\" onChange={changeCity} required />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Email</label>\r\n              <input type=\"email\" className=\"form-control\" value={EmailId} placeholder=\"Enter Email\" onChange={changeEmail} required />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">RollNO</label>\r\n              <input type=\"number\" className=\"form-control\" value={RollNO} placeholder=\"Enter Roll No\" onChange={changeRollNo} required />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Mobile</label>\r\n              <input type=\"number\" className=\"form-control\" value={Mobile} placeholder=\"Enter Mobile\" onChange={changeMobile} required />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Course</label>\r\n              <input type=\"text\" className=\"form-control\" value={Course} placeholder=\"Enter Course\" onChange={changeCourse} required />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">DOJ</label>\r\n              <input type=\"date\" className=\"form-control\" value={DOJ} placeholder=\"Enter Date of Joining\" onChange={changeDOJ} required />\r\n            </div>\r\n            <input type=\"submit\" value=\"Submit\" className=\"btn btn-success m-5\" />\r\n            <Link to=\"/a\" className=\"btn btn-primary\"> Back to StudentData</Link>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </div>\r\n\r\n  )\r\n}\r\nexport default StudentEditForm;","E:\\html\\React_JS\\project\\src\\Registration.js",["46","47"],[],"E:\\html\\React_JS\\project\\src\\LoginForm.js",["48","49"],[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":6,"column":48,"nodeType":"54","messageId":"55","endLine":6,"endColumn":52},{"ruleId":"52","severity":1,"message":"56","line":78,"column":11,"nodeType":"54","messageId":"55","endLine":78,"endColumn":14},{"ruleId":"50","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":36,"column":5,"nodeType":"60","endLine":36,"endColumn":7,"suggestions":"61"},{"ruleId":"52","severity":1,"message":"56","line":25,"column":13,"nodeType":"54","messageId":"55","endLine":25,"endColumn":16},{"ruleId":"62","severity":1,"message":"63","line":49,"column":14,"nodeType":"64","messageId":"65","endLine":49,"endColumn":16},{"ruleId":"52","severity":1,"message":"66","line":4,"column":10,"nodeType":"54","messageId":"55","endLine":4,"endColumn":21},{"ruleId":"52","severity":1,"message":"56","line":25,"column":13,"nodeType":"54","messageId":"55","endLine":25,"endColumn":16},"no-new-object",["67"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'app' is assigned a value but never used.",["67"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'stid'. Either include it or remove the dependency array.","ArrayExpression",["68"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'FirebaseApp' is defined but never used.","no-object-constructor",{"desc":"69","fix":"70"},"Update the dependencies array to be: [stid]",{"range":"71","text":"72"},[1030,1032],"[stid]"]